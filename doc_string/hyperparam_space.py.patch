# Patch generated by Pyment v0.3.3

--- a/hyperparam_space.py
+++ b/hyperparam_space.py
@@ -11,10 +11,16 @@
         - 'choice' : set of options {A, B, C, ...}
         - 'const': any single value
 
-    :param space: Boundaries
-    :type space: dict
-    :returns:Boundaries type
-    :rtype: dict
+    Parameters
+    ----------
+    space : dict
+        Boundaries
+
+    Returns
+    -------
+    dict
+        Boundaries type
+
     """
     btypes = {}
 
@@ -61,17 +67,24 @@
 
 
 def fix_params(params, space):
-    '''
+    """
     Normalize parameters value according to defined space:
         - 'quniform': round param value with defined step
         - 'constant': replace parameter's value with defined constant
-    :param params: Parameters
-    :type params: dict
-    :param space: Boundaries
-    :type space: dict
-    :returns: Normalized parameters
-    :rtype: dict
-    '''
+
+    Parameters
+    ----------
+    params : dict
+        Parameters
+    space : dict
+        Boundaries
+
+    Returns
+    -------
+    dict
+        Normalized parameters
+
+    """
     params = dict(params)
     btypes = get_bound_types(space)
 
@@ -105,12 +118,19 @@
 
 
 def ranking(ser):
-    """Make rank transformation.
-    @param ser: Values for ranking. None interpreted as worst.
-    @type ser: Series of float
-
-    @return: Ranks (1: highest, N: lowest)
-    @rtype: Series of int
+    """
+    Make rank transformation.
+
+    Parameters
+    ----------
+    ser : Series of float
+        Values for ranking. None interpreted as worst.
+
+    Returns
+    -------
+    Series of int
+        Ranks (1: highest, N: lowest)
+
     """
     ser = ser.fillna(ser.min())
 
@@ -121,9 +141,11 @@
 
 
 def qround(x, a, b, q):
-    """Convert x to one of [a, a+q, a+2q, .., b]
-    Parameters
-    ----
+    """
+    Convert x to one of [a, a+q, a+2q, .., b]
+
+    Parameters
+    ----------
     x : int or float
         Input value. x must be in [a, b].
         If x < a, x set to a.
@@ -133,11 +155,12 @@
     b : int or float
         Boundaries. b must be greater than a. Otherwize b set to a.
     q : int or float
-        Step value. If q and a are both integer, x set to integer too.
-    Returns
-    -------
-    int or float
-        Rounded value
+        
+
+    Returns
+    -------
+
+    
     """
     # Check if a <= x <= b
     b = max(a, b)
